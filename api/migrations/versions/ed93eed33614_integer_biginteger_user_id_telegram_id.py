"""Integer -> BigInteger & user_id -> telegram_id

Revision ID: ed93eed33614
Revises: db36f6b7bc08
Create Date: 2023-02-20 23:53:06.471734

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ed93eed33614"
down_revision = "db36f6b7bc08"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "carts",
        sa.Column(
            "telegram_id",
            sa.BigInteger(),
            nullable=True,
            comment="Уникальный телеграм-идентификатор пользователя",
        ),
    )
    op.drop_index("ix_carts_user_id", table_name="carts")
    op.create_index(
        op.f("ix_carts_telegram_id"), "carts", ["telegram_id"], unique=False
    )
    op.drop_constraint("carts_user_id_fkey", "carts", type_="foreignkey")
    op.create_foreign_key(
        None, "carts", "users", ["telegram_id"], ["telegram_id"], ondelete="cascade"
    )
    op.drop_column("carts", "user_id")
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="Уникальный id пользователя в postgresql",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
    )
    op.alter_column(
        "users",
        "telegram_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_comment="Уникальный user_id пользователя из телеграма",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "telegram_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="Уникальный user_id пользователя из телеграма",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_comment="Уникальный id пользователя в postgresql",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
    )
    op.add_column(
        "carts",
        sa.Column(
            "user_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Уникальный идентификатор пользователя",
        ),
    )
    op.drop_constraint(None, "carts", type_="foreignkey")
    op.create_foreign_key(
        "carts_user_id_fkey",
        "carts",
        "users",
        ["user_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_carts_telegram_id"), table_name="carts")
    op.create_index("ix_carts_user_id", "carts", ["user_id"], unique=False)
    op.drop_column("carts", "telegram_id")
    # ### end Alembic commands ###
